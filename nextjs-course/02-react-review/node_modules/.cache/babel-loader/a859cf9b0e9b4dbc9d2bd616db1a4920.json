{"ast":null,"code":"var _jsxFileName = \"/Users/forrestm/Desktop/nextjs-course/02-react-review/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(props) {\n  _s();\n  // We create a state for Opening the modal.\n  // As always, the constant accepts 2 arguments\n  // The first is the variable that we'll change (modalIsOpen)\n  // The second is the function that changes the value.\n  // We'll set the default to be false\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // Now we have a function that's called below when the button is clicked\n  // When it's called, we want to change the modalIsOpen state to true\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteHandler,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: closeModalHandler,\n      onConfirm: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCancel: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"d4gKB9FOjUoqrytIak5jiPIqzB0=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","Modal","Backdrop","Todo","props","modalIsOpen","setModalIsOpen","deleteHandler","closeModalHandler","text"],"sources":["/Users/forrestm/Desktop/nextjs-course/02-react-review/src/components/Todo.js"],"sourcesContent":["import { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport Backdrop from \"./Backdrop\";\n\nfunction Todo(props) {\n  // We create a state for Opening the modal.\n  // As always, the constant accepts 2 arguments\n  // The first is the variable that we'll change (modalIsOpen)\n  // The second is the function that changes the value.\n  // We'll set the default to be false\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // Now we have a function that's called below when the button is clicked\n  // When it's called, we want to change the modalIsOpen state to true\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n\n  return (\n    <div className=\"card\">\n      <h2>{props.text}</h2>\n      <div className=\"actions\">\n        <button className=\"btn\" onClick={deleteHandler}>\n          Delete\n        </button>\n      </div>\n      {/*\n        This code is a shortcut. We could use a ternary operator\n        Like {modalIsOpen ? <Modal /> ? null}.\n        But this basically evaluates both parts of the statement.\n        If they're both true, it executes the second part.\n        Functions in javascript will always be evaluated as true\n      */}\n      {/*\n        Now we can pass functions as props.\n        In this case, all clicks should do the same thing, so we'll pass the closeModalHandler function\n        See the code for each individual component to see how this is handled there.\n      */}\n      {modalIsOpen && (\n        <Modal onCancel={closeModalHandler} onConfirm={closeModalHandler} />\n      )}\n      {modalIsOpen && <Backdrop onCancel={closeModalHandler} />}\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EACnB;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA;EACA,SAASO,aAAa,GAAG;IACvBD,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAASE,iBAAiB,GAAG;IAC3BF,cAAc,CAAC,KAAK,CAAC;EACvB;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAA,UAAKF,KAAK,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEF,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEtC;MAAA;MAAA;MAAA;IAAA,QACL,EAaLF,WAAW,iBACV,QAAC,KAAK;MAAC,QAAQ,EAAEG,iBAAkB;MAAC,SAAS,EAAEA;IAAkB;MAAA;MAAA;MAAA;IAAA,QAClE,EACAH,WAAW,iBAAI,QAAC,QAAQ;MAAC,QAAQ,EAAEG;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEV;AAAC,GA5CQL,IAAI;AAAA,KAAJA,IAAI;AA8Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}